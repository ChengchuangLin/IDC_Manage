# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-03-08 06:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbnormalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(verbose_name='异常信息')),
                ('schedule', models.PositiveSmallIntegerField(choices=[(0, '未处理'), (1, '已处理')], verbose_name='进度')),
                ('find_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='发现时间')),
                ('handel_time', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
            ],
            options={
                'verbose_name': '异常及告警',
                'verbose_name_plural': '异常及告警',
                'db_table': 'abnormalinfo',
            },
        ),
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=64, verbose_name='机柜编号')),
                ('open_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='机柜开通日期')),
            ],
            options={
                'verbose_name': '机柜信息',
                'verbose_name_plural': '机柜信息',
                'db_table': 'cabinet',
            },
        ),
        migrations.CreateModel(
            name='CabinetLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handle_type', models.PositiveSmallIntegerField(choices=[(0, '关闭'), (1, '开通')], verbose_name='操作类型')),
                ('date', models.DateField(verbose_name='日期')),
                ('handle_date', models.DateTimeField(auto_now_add=True, verbose_name='操作日期')),
                ('cabinet_number', models.CharField(max_length=64, verbose_name='机柜编号')),
                ('dc_surplus_count', models.IntegerField(verbose_name='数据中心剩余机柜数量')),
            ],
            options={
                'verbose_name': '机柜日志',
                'verbose_name_plural': '机柜日志',
                'db_table': 'cabinetlog',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='客户名称')),
                ('info', models.TextField(blank=True, null=True, verbose_name='客户相关信息')),
            ],
            options={
                'verbose_name': '客户信息',
                'verbose_name_plural': '客户信息',
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='DcInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='数据中心名称')),
                ('address', models.CharField(blank=True, max_length=192, null=True, verbose_name='数据中心地址')),
                ('info', models.TextField(blank=True, null=True, verbose_name='数据中心简介')),
                ('material', models.FileField(blank=True, null=True, upload_to='<django.db.models.fields.CharField>/', verbose_name='机房相关资料')),
                ('phon', models.CharField(max_length=64, verbose_name='机房值班电话')),
            ],
            options={
                'verbose_name': '数据中心',
                'verbose_name_plural': '数据中心',
                'db_table': 'dcinfo',
            },
        ),
        migrations.CreateModel(
            name='Equipmen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_type', models.PositiveSmallIntegerField(choices=[(1, '服务器设备'), (2, '网络设备')], verbose_name='设备类型')),
                ('manufacturers', models.CharField(max_length=64, verbose_name='设备厂商')),
                ('model_num', models.CharField(max_length=64, verbose_name='设备型号')),
                ('serial_num', models.CharField(max_length=128, unique=True, verbose_name='设备SN号')),
                ('equipment_u', models.PositiveSmallIntegerField(verbose_name='设备U数')),
                ('place_u', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='所在机柜U数')),
                ('up_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='上架日期')),
                ('node', models.TextField(blank=True, null=True, verbose_name='设备信息描述')),
                ('cabinet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Cabinet', verbose_name='所属机柜')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Customer', verbose_name='所属客户')),
            ],
            options={
                'verbose_name': '设备信息',
                'verbose_name_plural': '设备信息',
                'db_table': 'equipmen',
            },
        ),
        migrations.CreateModel(
            name='EquipmenLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handle_type', models.PositiveSmallIntegerField(choices=[(0, '下架'), (1, '上架')], verbose_name='操作类型')),
                ('handle_date', models.DateTimeField(verbose_name='操作日期')),
                ('cabinet', models.CharField(max_length=64, verbose_name='下架机柜')),
                ('model_num', models.CharField(max_length=64, verbose_name='设备型号')),
                ('serial_num', models.CharField(max_length=128, verbose_name='设备SN号')),
                ('ipaddre', models.GenericIPAddressField(blank=True, null=True, protocol='IPV4', verbose_name='IP地址')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Customer', verbose_name='所属客户')),
                ('handle_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='操作用户')),
            ],
            options={
                'verbose_name': '设备操作日志',
                'verbose_name_plural': '设备操作日志',
                'db_table': 'equipmenlog',
            },
        ),
        migrations.CreateModel(
            name='IDCInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='机房名称')),
                ('info', models.TextField(blank=True, null=True, verbose_name='机房简介')),
                ('principal', models.CharField(blank=True, max_length=64, null=True, verbose_name='机房负责人')),
                ('dc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.DcInfo', verbose_name='所属数据中心')),
            ],
            options={
                'verbose_name': '机房信息',
                'verbose_name_plural': '机房信息',
                'db_table': 'idcinfo',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(blank=True, max_length=128, null=True, verbose_name='位置')),
                ('name', models.CharField(max_length=128, verbose_name='物品名称')),
                ('name_num', models.CharField(max_length=128, verbose_name='物品型号')),
                ('sn', models.CharField(blank=True, max_length=128, null=True, verbose_name='SN号')),
                ('count', models.PositiveIntegerField(verbose_name='物品数量')),
                ('node', models.TextField(blank=True, null=True, verbose_name='物品描述')),
                ('post_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='物流单号')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '损坏'), (1, '完好')], default=1, verbose_name='状态')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Customer', verbose_name='所属客户')),
                ('idc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.IDCInfo', verbose_name='所属机房')),
            ],
            options={
                'verbose_name': '库存信息',
                'verbose_name_plural': '库存信息',
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='IpAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipaddre', models.GenericIPAddressField(protocol='IPV4', verbose_name='IP地址')),
                ('netmask', models.GenericIPAddressField(blank=True, null=True, protocol='IPV4', verbose_name='子网掩码')),
                ('gateway', models.GenericIPAddressField(blank=True, null=True, protocol='IPV4', verbose_name='网关地址')),
                ('tags', models.CharField(blank=True, max_length=64, null=True, verbose_name='IP标签')),
                ('equipmen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Equipmen', verbose_name='设备')),
            ],
            options={
                'verbose_name': 'IPV4地址信息',
                'verbose_name_plural': 'IPV4地址信息',
                'db_table': 'ipaddress',
            },
        ),
        migrations.CreateModel(
            name='PortInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_equipment_port', models.CharField(max_length=32, verbose_name='本端端口号')),
                ('up_equipment_port', models.CharField(max_length=32, verbose_name='上联端口号')),
                ('self_equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='self_equipment', to='dc_info.Equipmen', verbose_name='本端设备')),
                ('up_equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='up_equipment', to='dc_info.Equipmen', verbose_name='上联设备')),
            ],
            options={
                'verbose_name': '设备端口对应信息',
                'verbose_name_plural': '设备端口对应信息',
                'db_table': 'portinfo',
            },
        ),
        migrations.AddField(
            model_name='cabinetlog',
            name='cabinet_dc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.DcInfo', verbose_name='机柜所属数据中心'),
        ),
        migrations.AddField(
            model_name='cabinetlog',
            name='cabinet_idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.IDCInfo', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='cabinetlog',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Customer', verbose_name='所属客户'),
        ),
        migrations.AddField(
            model_name='cabinetlog',
            name='handle_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='操作用户'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Customer', verbose_name='所属客户'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.IDCInfo', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='abnormalinfo',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dc_info.Equipmen', verbose_name='异常设备'),
        ),
        migrations.AlterUniqueTogether(
            name='ipaddress',
            unique_together=set([('equipmen', 'ipaddre')]),
        ),
        migrations.AlterUniqueTogether(
            name='idcinfo',
            unique_together=set([('dc', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='cabinet',
            unique_together=set([('idc', 'number')]),
        ),
    ]
